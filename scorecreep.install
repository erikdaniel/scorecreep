<?php

/**
 * @file
 * Install file for Node Example module.
 *
 * The definition of the fields for the module is here,
 *
 * @see @link http://drupal.org/node/707832 Field API Tutorial @endlink
 * @see @link http://drupal.org/node/443536 Field API Handbook Page @endlink
 * @see @link field Field API documentation @endlink
 */

/**
 * Implements hook_install().
 *
 * - Add the scorecreep_performance content type
 *
 * @see node_type_set_defaults()
 * @see field_info_instance()
 * @see field_update_instance()
 * @see field_create_field()
 * @see field_create_instance()
 */
function scorecreep_install() {
  // use get_t() to get the name of our localization function for translation
  // during install, when t() is not available.
  $t = get_t();

  // Define the node type.
  $sc_performance = array(
    'type' => 'scorecreep_performance',
    'name' => $t('Scorecreep Performance Node'),
    'base' => 'node_content',
    'description' => $t('This is a performance.'),
    //'body_label' => $t('Performance description')
  );

  // Complete the node type definition by setting any defaults not explicitly
  // declared above.
  // http://api.drupal.org/api/function/node_type_set_defaults/7
  $content_type = node_type_set_defaults($sc_performance);
  //node_add_body_field($content_type);

  // Save the content type
  node_type_save($content_type);


  // Load the instance definition for our content type's body
  // http://api.drupal.org/api/function/field_info_instance/7
  //$body_instance = field_info_instance('node', 'body', 'scorecreep_performance');

  // Add our scorecreep_performance_list view mode to the body instance display by
  // instructing the body to display as a summary
  /*
  $body_instance['display']['scorecreep_performance_list'] = array(
    'label' => 'hidden',
    'type' => 'text_summary_or_trimmed',
  );
  */

  // Save our changes to the body field instance.
  // http://api.drupal.org/api/function/field_update_instance/7
  //field_update_instance($body_instance);

  // Create all the fields we are adding to our content type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_scorecreep_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_scorecreep_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $sc_performance['type'];
    field_create_instance($instance);
  }

}
/**
 * Delete user roles
/**
 * Returns a structured array defining the fields created by this content type.
 *
 * This is packaged in a function so it can be used in both
 * scorecreep_install() and scorecreep_uninstall().
 */
function _scorecreep_installed_fields() {
  $t = get_t();
  return array(
    'scorecreep_score' => array(
      'field_name' => 'scorecreep_score',
      'cardinality' => 3,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 4,
      ),
    ),
    'scorecreep_group' => array(
      'field_name'  => 'scorecreep_group',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'scorecreep_tiebreakwinner' => array(
      'field_name' => 'scorecreep_tiebreakwinner',
      'type'       => 'text',
      'cardinality' => 1,
    ),
  );
}

/**
 * Returns a structured array defining the instances for this content type.
 *
 * The instance lets Drupal know which widget to use to allow the user to enter
 * data and how to react in different view modes.  We are going to display a
 * page that uses a custom "scorecreep_list" view mode.  We will set a
 * cardinality of three allowing our content type to give the user three color
 * fields.
 *
 * This is provided as a function so that it can be used in both hook_install()
 * and hook_uninstall().
 */
function _scorecreep_installed_instances() {
  $t = get_t();
  return array(
    'scorecreep_core' => array(
      'field_name' => 'scorecreep_score',
      'label'       => $t('The total score the performance recieved.'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'scorecreep_performance_list' => array(
          'label' => 'hidden',
          'type' => 'scorecreep_score',
        ),
      ),
    ),
    'scorecreep_group' => array(
      'field_name'  => 'scorecreep_group',
      'label' => $t('Group piece'),
      'required'    => FALSE,
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'scorecreep_performance_list' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'scorecreep_tiebreakwinner' => array(
      'field_name'  => 'scorecreep_tiebreakwinner',
      'label'       => $t('Tie Break Winner:'),
      'required'    => FALSE,
      'widget' => array(
        'type'    => 'text',
        'weight'  => 2.10,
      ),
      'display' => array(
        'scorecreep_performance_list' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
  );
}


/**
 * Implements hook_uninstall().
 */
function scorecreep_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'scorecreep_performance'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // TODO we will have to delete all the ref tables as well.

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_scorecreep_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Loop over any remaining field instances attached to the scorecreep
  // content type (such as the body field) and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('node', 'scorecreep_performance');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete('scorecreep_performance');

  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);

}
